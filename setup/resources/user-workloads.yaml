kind: Template
apiVersion: v1
metadata:
  name: nodejs-sample
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx-deployment
      labels:
        app: nginx
    spec:
      replicas: 0
      selector:
        matchLabels:
          app: nginx
      template:
        metadata:
          labels:
            app: nginx
        spec:
          containers:
          - name: nginx
            image: quay.io/bitnami/nginx
            resources:
              requests:
                cpu: 250m
                memory: 64Mi
              limits:
                cpu: 500m
                memory: 250Mi
            ports:
            - containerPort: 80
  - apiVersion: v1
    kind: Service
    metadata:
      name: nginx-service
    spec:
      selector:
        app: nginx
      ports:
        - protocol: TCP
          port: 80
          targetPort: 80
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: nginx-route
    spec:
      to:
        kind: Service
        name: nginx-service
  - apiVersion: v1
    data:
      username: YWRtaW4=
      password: MWYyZDFlMmU2N2Rm
    kind: Secret
    metadata:
      name: mysecret
    type: Opaque
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: game-config
    data:
      game.properties: |
        enemies=aliens
        lives=3
        enemies.cheat=true
        enemies.cheat.level=noGoodRotten
        secret.code.passphrase=UUDDLRLRBABAS
        secret.code.allowed=true
        secret.code.lives=30
      ui.properties: |
        color.good=purple
        color.bad=yellow
        allow.textmode=true
        how.nice.to.look=fairlyNice
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        app.openshift.io/vcs-ref: master
        app.openshift.io/vcs-uri: https://github.com/sclorg/nodejs-ex.git
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: nodejs-sample
        app.kubernetes.io/component: nodejs-sample
        app.kubernetes.io/instance: nodejs-sample
        app.kubernetes.io/name: nodejs
        app.kubernetes.io/part-of: sample-app
        app.openshift.io/runtime: nodejs
        app.openshift.io/runtime-version: 12-ubi7
      name: nodejs-sample
    spec:
      lookupPolicy:
        local: false
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        app.openshift.io/vcs-ref: master
        app.openshift.io/vcs-uri: https://github.com/codeready-toolchain/does-not-exist.git
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: nodejs-sample
        app.kubernetes.io/component: nodejs-sample
        app.kubernetes.io/instance: nodejs-sample
        app.kubernetes.io/name: nodejs
        app.kubernetes.io/part-of: sample-app
        app.openshift.io/runtime: nodejs
        app.openshift.io/runtime-version: 16-ubi9-minimal
      name: nodejs-sample
    spec:
      failedBuildsHistoryLimit: 5
      output:
        to:
          kind: ImageStreamTag
          name: nodejs-sample:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        git:
          uri: https://github.com/codeready-toolchain/does-not-exist.git
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: nodejs:16-ubi9-minimal
            namespace: openshift
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers:
      - generic:
          secretReference:
            name: nodejs-sample-generic-webhook-secret
        type: Generic
      - github:
          secretReference:
            name: nodejs-sample-github-webhook-secret
        type: GitHub
      - imageChange:
          lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/nodejs@sha256:1ab9834c333f4f57443e219a2fb2dcd8338bd200888b2c3cf626a047723f6616
        type: ImageChange
      - type: ConfigChange
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        app.openshift.io/vcs-ref: master
        app.openshift.io/vcs-uri: https://github.com/codeready-toolchain/does-not-exist.git
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: nodejs-sample2
        app.kubernetes.io/component: nodejs-sample2
        app.kubernetes.io/instance: nodejs-sample2
        app.kubernetes.io/name: nodejs2
        app.kubernetes.io/part-of: sample-app2
        app.openshift.io/runtime: nodejs
        app.openshift.io/runtime-version: 16-ubi9-minimal
      name: nodejs-sample2
    spec:
      failedBuildsHistoryLimit: 5
      output:
        to:
          kind: ImageStreamTag
          name: nodejs-sample:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        git:
          uri: https://github.com/codeready-toolchain/does-not-exist.git
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: nodejs:16-ubi9-minimal
            namespace: openshift
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers:
      - generic:
          secretReference:
            name: nodejs-sample-generic-webhook-secret
        type: Generic
      - github:
          secretReference:
            name: nodejs-sample-github-webhook-secret
        type: GitHub
      - imageChange:
          lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/nodejs@sha256:1ab9834c333f4f57443e219a2fb2dcd8338bd200888b2c3cf626a047723f6616
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      name: proxy
      labels:
        app: guestbook
        tier: proxy
    spec:
      replicas: 0
      selector:
        matchLabels:
          tier: proxy
      template:
        metadata:
          labels:
            tier: proxy
        spec:
          containers:
          - name: nginx
            image: quay.io/bitnami/nginx
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      name: proxy2
      labels:
        app: guestbook2
        tier: proxy2
    spec:
      replicas: 0
      selector:
        matchLabels:
          tier: proxy2
      template:
        metadata:
          labels:
            tier: proxy2
        spec:
          containers:
          - name: nginx
            image: quay.io/bitnami/nginx
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: build-robot
      namespace: default
    secrets:
    - name: mysecret
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: pod-reader
    rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "watch", "list"]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: read-pods
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      kind: Role
      name: pod-reader
      apiGroup: rbac.authorization.k8s.io
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-2
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-3
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-4
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-5
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-6
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-7
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-8
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-9
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-10
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: build-robot-edit-11
    subjects:
    - kind: ServiceAccount
      name: build-robot
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: user-rbac-edit
