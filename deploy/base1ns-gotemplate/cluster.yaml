apiVersion: toolchain.dev.openshift.com/v1alpha1
kind: TierTemplate
metadata:
  name: cluster-resources-go
spec:
  revision: 8b0d542-8b0d542
  template:
    apiVersion: template.openshift.io/v1
    kind: Template
    metadata: {}
    objects:
    - apiVersion: quota.openshift.io/v1
      kind: ClusterResourceQuota
      metadata:
        name: 'for-{{SPACE_NAME}}-deployments'
      spec:
        quota:
          hard:
            count/deploymentconfigs.apps: "30"
            count/deployments.apps: "30"
            count/pods: "50"
            count/virtualmachines.kubevirt.io: "2"
        selector:
          annotations: null
          labels:
            matchLabels:
              toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
    parameters:
    - name: SPACE_NAME
      required: true
  templateObjects:
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-deployments
    spec:
      quota:
        hard:
          count/deploymentconfigs.apps: '{{.DEPLOYMENT_QUOTA}}'
          count/deployments.apps: '{{.DEPLOYMENT_QUOTA}}'
          count/pods: '{{.POD_COUNT}}'
          count/virtualmachines.kubevirt.io: '{{.VIRTUAL_MACHINES}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-replicas
    spec:
      quota:
        hard:
          count/replicasets.apps: '{{.DEPLOYMENT_QUOTA}}'
          count/replicationcontrollers: '{{.DEPLOYMENT_QUOTA}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-routes
    spec:
      quota:
        hard:
          count/ingresses.extensions: '{{.DEPLOYMENT_QUOTA}}'
          count/routes.route.openshift.io: '{{.DEPLOYMENT_QUOTA}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-jobs
    spec:
      quota:
        hard:
          count/jobs.batch: '{{.DEPLOYMENT_QUOTA}}'
          count/daemonsets.apps: '{{.DEPLOYMENT_QUOTA}}'
          count/cronjobs.batch: '{{.DEPLOYMENT_QUOTA}}'
          count/statefulsets.apps: '{{.DEPLOYMENT_QUOTA}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-services
    spec:
      quota:
        hard:
          count/services: '{{.DEPLOYMENT_QUOTA}}'
          services.loadbalancers: '{{.LOAD_BALANCER}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-bc
    spec:
      quota:
        hard:
          count/buildconfigs.build.openshift.io: '{{.DEPLOYMENT_QUOTA}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-secrets
    spec:
      quota:
        hard:
          count/secrets: '{{.SECRETS_COUNT}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: quota.openshift.io/v1
    kind: ClusterResourceQuota
    metadata:
      name: for-{{.SPACE_NAME}}-cm
    spec:
      quota:
        hard:
          count/configmaps: '{{.SECRETS_COUNT}}'
      selector:
        annotations: {}
        labels:
          matchLabels:
            toolchain.dev.openshift.com/space: '{{.SPACE_NAME}}'
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      annotations:
        toolchain.dev.openshift.com/feature: openshift-lightspeed
      name: 'osl-access-{{.SPACE_NAME}}'
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: lightspeed-operator-query-access
    subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: '{{.SPACE_NAME}}'
  - apiVersion: toolchain.dev.openshift.com/v1alpha1
    kind: Idler
    metadata:
      name: '{{.SPACE_NAME}}-dev' 
    spec:
      timeoutSeconds: 43200
  tierName: ttr-go-template
  type: clusterresources